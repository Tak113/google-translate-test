{"version":3,"sources":["font/KouzanGyoushoOTF.woff","font/fonts.js","lowcase/lowCase.styles.js","lowcase/lowCase.js","convert/convert.styles.js","convert/convert.js","App.js","reportWebVitals.js","index.js"],"names":["createGlobalStyle","KouzanGyousho","LetterSpace","styled","span","LowCase","name","reactStringReplace","match","i","GyouzanFont","div","Convert","text","language","useState","convertedText","setConvertedText","endPoint","useEffect","axios","get","then","response","data","catch","err","console","log","App","setName","onSubmit","event","preventDefault","type","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,MAA0B,8CCI1BA,cAAf,8MAIQC,G,kCCNKC,EAAcC,IAAOC,KAAV,sD,OCaTC,EAXC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAElB,OACC,+BACEC,IAAmBD,EAAM,qEAAwB,SAACE,EAAOC,GAAR,OACjD,cAACP,EAAD,UAAsBM,GAAJC,SCLTC,EAAcP,IAAOQ,IAAV,gKCqCTC,EAnCC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EACIC,mBAAS,IADb,mBAC/BC,EAD+B,KAChBC,EADgB,KAOlCC,EAAW,sCAmBf,OAlBAA,GAAQ,UAHQ,kEAIhBA,GAAQ,qBAAkBL,EAAlB,iBAA+BC,EAA/B,UAGRK,qBAAU,WACSC,IACdC,IACAH,GAEAI,MAAK,SAACC,GAENN,EAAiBM,EAASC,KAAKX,SAE/BY,OAAM,SAACC,GACNC,QAAQC,IAAI,iBAAkBF,QAEjC,CAACb,EAAMC,IAGT,cAACJ,EAAD,UACC,cAAC,EAAD,CACCJ,KAAMU,OCGIa,MAjCf,WAAgB,IAAD,EACWd,mBAAS,IADpB,mBACNT,EADM,KACAwB,EADA,KAOb,OACE,gCACE,cAAC,EAAD,IACA,sBAAMC,SAPW,SAAAC,GACnBA,EAAMC,kBAMJ,SACE,4DAEE,uBACEC,KAAK,OACLC,MAAO7B,EACP8B,SAAU,SAAAC,GAAC,OAAIP,EAAQO,EAAEC,OAAOH,eAIrC7B,EAZH,wBAcIA,EACA,cAAC,EAAD,CACEO,KAAMP,EACNQ,SAAS,OAET,SCpBKyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e6004f4b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/KouzanGyoushoOTF.7685a634.woff\";","import { createGlobalStyle } from 'styled-components';\n\nimport KouzanGyousho from './KouzanGyoushoOTF.woff';\n\nexport default createGlobalStyle`\n\t@font-face {\n\t\tfont-family: 'Font Name';\n\t\tsrc: local('Font Name'), local('FontName'),\n\t\turl(${KouzanGyousho}) format('woff');\n\t\tfont-weight: 300;\n\t\tfont-style: normal;\n\t}\n`;","import styled from 'styled-components';\n\nexport const LetterSpace = styled.span`\n\tletter-spacing: -15px;\n`; ","import reactStringReplace from 'react-string-replace';\nimport {LetterSpace} from './lowCase.styles.js';\n\n//ref : https://github.com/iansinnott/react-string-replace\nconst LowCase = ({ name }) => {\n\n\treturn (\n\t\t<span>\n\t\t\t{reactStringReplace(name, /(ッ|ャ|ュ|ョ|ァ|ィ|ゥ|ェ|ォ)/g, (match, i) => (\n\t\t\t\t<LetterSpace key={i}>{match}</LetterSpace>\n\t\t\t))}\n\t\t</span>\n\t);\n};\n\nexport default LowCase;","import styled from 'styled-components';\n\n//vertical direction\n//ref : https://www.webcreatorbox.com/tech/writing-mode\nexport const GyouzanFont = styled.div`\n\tfont-size: 30px;\n\tfont-family: 'Font Name';\n\t-ms-writing-mode: tb-rl;\n\twriting-mode: vertical-rl;\n\tletter-spacing: -5px;\n`;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport LowCase from '../lowcase/lowCase.js';\nimport { GyouzanFont } from './convert.styles.js';\n\nconst Convert = ({ text, language }) => {\n  const [convertedText, setConvertedText] = useState('');\n\n  //from Irie-san\n  //ref : https://qiita.com/satto_sann/items/be4177360a0bc3691fdf\n  const API_KEY = 'AKfycbzSMySCPJSxxCDzglgPsMelqqXzuX_zRLm7Qvv-Ol8Li2QP-fMGTb4gGA';\n  \n  let endPoint = 'https://script.google.com/macros/s/';\n  endPoint += `${API_KEY}`;\n  endPoint += `/exec?text=${text}&from=${language}&to=ja`;\n  // console.log(endPoint);\n\n  useEffect(() => {\n    const response = axios\n      .get(\n      \tendPoint,\n      )\n      .then((response) => {\n        // console.log(response.data.text)\n      \tsetConvertedText(response.data.text);\n      })\n      .catch((err) => {\n        console.log('rest api error', err);\n      });\n  }, [text, language]);\n\n  return (\n  \t<GyouzanFont>\n  \t\t<LowCase\n  \t\t\tname={convertedText}\n  \t\t/>\n  \t</GyouzanFont>\n  );\n};\n\nexport default Convert;","import React, { useState } from 'react';\nimport GlobalFonts from './font/fonts.js';\n\nimport Convert from './convert/convert.js';\n\nfunction App() {\n  const [name, setName] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <GlobalFonts />\n      <form onSubmit={handleSubmit}>\n        <label>\n          Put your english name :  \n          <input\n            type='text'\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </label>\n      </form>\n      {name} is translated into :\n      {\n        name ?\n        <Convert\n          text={name}\n          language='en'\n        />\n        : null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}