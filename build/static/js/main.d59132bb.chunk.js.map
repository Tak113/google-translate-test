{"version":3,"sources":["font/KouzanGyoushoOTF.woff","font/fonts.js","lowcase/lowCase.styles.js","lowcase/lowCase.js","convert/convert.styles.js","convert/convert.js","App.js","reportWebVitals.js","index.js"],"names":["createGlobalStyle","KouzanGyousho","LetterSpace","styled","span","TextBox","LabelIcon","img","LowCase","name","reactStringReplace","match","i","src","alt","FontPosition","div","TshirtContainer","BackgroundImage","Convert","text","language","fontType","console","log","useState","convertedText","setConvertedText","endPoint","useEffect","axios","get","then","response","data","catch","err","formReducer","state","event","value","App","useReducer","formData","setFormData","setName","font","setFont","handleChange","target","className","onSubmit","preventDefault","type","onChange","checked","check","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAAe,MAA0B,8CCI1BA,cAAf,8MAIQC,G,0CCNKC,EAAcC,IAAOC,KAAV,sDAIXC,EAAUF,IAAOC,KAAV,yDAIPE,EAAYH,IAAOI,IAAV,mD,OCWPC,EAfC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAElB,OACC,eAACJ,EAAD,WACEK,IAAmBD,EAAM,qEAAwB,SAACE,EAAOC,GAAR,OACjD,cAACV,EAAD,UAAsBS,GAAJC,MAEnB,cAACN,EAAD,CACCO,IAAI,oJACJC,IAAI,cCXKC,EAAeZ,IAAOa,IAAV,mGAMZC,EAAkBd,IAAOa,IAAV,yTAefE,EAAkBf,IAAOa,IAAV,wSCwBbG,EAxCC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACjCC,QAAQC,IAAIF,GADoC,MAENG,mBAAS,IAFH,mBAEzCC,EAFyC,KAE1BC,EAF0B,KAQ5CC,EAAW,sCAoBf,OAnBAA,GAAQ,UAHQ,kEAIhBA,GAAQ,qBAAkBR,EAAlB,iBAA+BC,EAA/B,UAGRQ,qBAAU,WACSC,IACdC,IACAH,GAEAI,MAAK,SAACC,GAGNN,EAAiBM,EAASC,KAAKd,SAE/Be,OAAM,SAACC,GACNb,QAAQC,IAAI,iBAAkBY,QAEjC,CAAChB,EAAMC,IAGR,eAACJ,EAAD,WACE,cAACC,EAAD,IACE,cAACH,EAAD,UACA,cAAC,EAAD,CACCN,KAAMiB,UCpCTW,EAAc,SAACC,EAAOC,GAC1B,kCACKD,GADL,kBAEGC,EAAM9B,KAAO8B,EAAMC,SAyFTC,MArFf,WAAgB,IAAD,EACmBC,qBAAWL,EAAa,IAD3C,mBACNM,EADM,KACIC,EADJ,OAEWnB,mBAAS,OAFpB,mBAENhB,EAFM,KAEAoC,EAFA,OAGWpB,mBAAS,YAHpB,mBAGNqB,EAHM,KAGAC,EAHA,KAYPC,EAAe,SAAAT,GACnBK,EAAY,CACVnC,KAAM8B,EAAMU,OAAOxC,KACnB+B,MAAOD,EAAMU,OAAOT,SAIxB,OACE,sBAAKU,UAAU,UAAf,UACE,cAAC,EAAD,IACA,8DACA,uBAAMC,SAlBW,SAAAZ,GACnBA,EAAMa,iBACNP,EAAQF,EAASlC,MACjBsC,EAAQJ,EAASG,MACjBvB,QAAQC,IAAImB,IAcV,UACE,mCACE,kCACE,oDACA,uBACEU,KAAK,OACL5C,KAAK,OACL+B,MAAOG,EAASlC,KAChB6C,SAAUN,SAIhB,mCACE,kCACE,0CACA,sBAAKE,UAAU,kBAAf,UACE,gCACE,gDACA,uBACEG,KAAK,QACL5C,KAAK,OACL+B,MAAM,WACNc,SAAUN,EACVO,QAAe,YAANT,EACTI,UAAU,oBAGd,gCACE,gDACA,uBACEG,KAAK,QACL5C,KAAK,OACL+B,MAAM,WACNc,SAAUN,EACVQ,MAAa,YAANV,EACPI,UAAU,4BAgBpB,wBAAQG,KAAK,SAAb,uBAEF,cAAC,EAAD,CACEjC,KAAMX,EACNY,SAAS,KACTC,SAAUwB,QChFHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d59132bb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/KouzanGyoushoOTF.7685a634.woff\";","import { createGlobalStyle } from 'styled-components';\n\nimport KouzanGyousho from './KouzanGyoushoOTF.woff';\n\nexport default createGlobalStyle`\n\t@font-face {\n\t\tfont-family: 'Font Name';\n\t\tsrc: local('Font Name'), local('FontName'),\n\t\turl(${KouzanGyousho}) format('woff');\n\t\tfont-weight: 300;\n\t\tfont-style: normal;\n\t}\n`;","import styled from 'styled-components';\n\nexport const LetterSpace = styled.span`\n\tletter-spacing: -22px;\n`; \n\nexport const TextBox = styled.span`\n\t// background-color: red;\n`;\n\nexport const LabelIcon = styled.img`\n\tmargin-left: -50px;\n`;","import reactStringReplace from 'react-string-replace';\nimport {LetterSpace,\n\t\tTextBox,\n\t\tLabelIcon} from './lowCase.styles.js';\n\n//ref : https://github.com/iansinnott/react-string-replace\nconst LowCase = ({ name }) => {\n\n\treturn (\n\t\t<TextBox>\n\t\t\t{reactStringReplace(name, /(ッ|ャ|ュ|ョ|ァ|ィ|ゥ|ェ|ォ)/g, (match, i) => (\n\t\t\t\t<LetterSpace key={i}>{match}</LetterSpace>\n\t\t\t))}\n\t\t\t<LabelIcon\n\t\t\t\tsrc='https://firebasestorage.googleapis.com/v0/b/mionosuke-db.appspot.com/o/translate%2Flabel.png?alt=media&token=391a1dab-bff4-482e-95b4-acdcb64cdd6c'\n\t\t\t\talt='label'\n\t\t\t/>\n\t\t</TextBox>\n\t);\n};\n\nexport default LowCase;","import styled from 'styled-components';\n\n//vertical direction\n//ref : https://www.webcreatorbox.com/tech/writing-mode\nexport const FontPosition = styled.div`\n\theight: 300px;\n\tposition: absolute;\n\tmargin: 120px auto 0 auto;\n`;\n\nexport const TshirtContainer = styled.div`\n\twidth: 500px;\n\tposition: absolute;\n\tdisplay: flex;\n\talign-items: center;\n\theight: 500px;\n\tfont-size: 50px;\n\tfont-family: 'Font Name';\n\t-ms-writing-mode: tb-rl;\n\twriting-mode: vertical-rl;\n\tletter-spacing: -5px;\n\tworkd-wrap: break-word;\n\tmargin: 0 auto 0 auto;\n`;\n\nexport const BackgroundImage = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tbackground-position: center;\n\tbackground-size: cover;\n\tbackground-image: url(\"https://firebasestorage.googleapis.com/v0/b/mionosuke-db.appspot.com/o/translate%2Ftshirt.png?alt=media&token=912fd175-2686-4bc9-b7d0-4ad096bec23a\");\n`;\n\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport LowCase from '../lowcase/lowCase.js';\nimport {TshirtContainer,\n        BackgroundImage,\n        FontPosition,\n        } from './convert.styles.js';\n\nconst Convert = ({ text, language, fontType }) => {\n  console.log(fontType);\n  const [convertedText, setConvertedText] = useState('');\n\n  //from Irie-san\n  //ref : https://qiita.com/satto_sann/items/be4177360a0bc3691fdf\n  const API_KEY = 'AKfycbzSMySCPJSxxCDzglgPsMelqqXzuX_zRLm7Qvv-Ol8Li2QP-fMGTb4gGA';\n  \n  let endPoint = 'https://script.google.com/macros/s/';\n  endPoint += `${API_KEY}`;\n  endPoint += `/exec?text=${text}&from=${language}&to=ja`;\n  // console.log(endPoint);\n\n  useEffect(() => {\n    const response = axios\n      .get(\n      \tendPoint,\n      )\n      .then((response) => {\n        \n        // console.log(response.data.text)\n      \tsetConvertedText(response.data.text);\n      })\n      .catch((err) => {\n        console.log('rest api error', err);\n      });\n  }, [text, language]);\n\n  return (\n    <TshirtContainer>\n      <BackgroundImage />\n        <FontPosition>\n  \t  \t  <LowCase\n  \t  \t  \tname={convertedText}\n  \t  \t  />\n        </FontPosition>\n    </TshirtContainer>\n  );\n};\n\nexport default Convert;","import React, { useState, useReducer } from 'react';\nimport GlobalFonts from './font/fonts.js';\nimport './App.css';\n\nimport Convert from './convert/convert.js';\n\nconst formReducer = (state, event) => {\n  return{\n    ...state,\n    [event.name]: event.value\n  }\n}\n\nfunction App() {\n  const [formData, setFormData] = useReducer(formReducer, {});\n  const [name, setName] = useState('Ken');\n  const [font, setFont] = useState('katakana');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setName(formData.name)\n    setFont(formData.font)\n    console.log(formData)\n  }\n\n  const handleChange = event => {\n    setFormData({\n      name: event.target.name,\n      value: event.target.value,\n    })\n  }\n\n  return (\n    <div className='wrapper'>\n      <GlobalFonts />\n      <h1>Your Name in Japanese Tshirt</h1>\n      <form onSubmit={handleSubmit}>\n        <fieldset>\n          <label>\n            <p>Your English Name :</p>  \n            <input\n              type='text'\n              name='name'\n              value={formData.name}\n              onChange={handleChange}\n            />\n          </label>\n        </fieldset>\n        <fieldset>\n          <label>\n            <p>Font Type</p>\n            <div className='radio-container'>\n              <div>\n                <label>Katakana : </label>\n                <input\n                  type='radio'\n                  name='font'\n                  value='katakana'\n                  onChange={handleChange}\n                  checked={font=='katakana'}\n                  className='radio-button'\n                />\n              </div>\n              <div>\n                <label>Hiragana : </label>\n                <input\n                  type='radio'\n                  name='font'\n                  value='hiragana'\n                  onChange={handleChange}\n                  check={font=='hiragana'}\n                  className='radio-button'\n                />\n              </div>\n            </div>\n          {/*\n            <select\n              name='font'\n              onChange={handleChange}\n              value={formData.font}\n            >\n              <option value=\"hiragana\">Hiragana</option>\n              <option value=\"katakana\">Katakana</option>\n            </select>\n          */}\n          </label>\n        </fieldset>\n        <button type='submit'>Submit</button>\n      </form>\n      <Convert\n        text={name}\n        language='en'\n        fontType={font}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}